namespace RastDB.Specification;

public static class Database
{
    public const string
        HEADER_PATH = "SystemTables/HeaderTable.dbh";
}
public static class TableHeader
{
    public const ushort
        SIGNATURE_NUMBER = 0x1eaf,
        TABLE_NAME_LENGTH = 32;

    public const int
        SIGNATURE_NUMBER_OFFSET = 0,
        SIGNATURE_NUMBER_SIZE = sizeof(byte),
        TABLE_NAME_OFFSET = SIGNATURE_NUMBER_OFFSET + SIGNATURE_NUMBER_SIZE,
        TABLE_NAME_SIZE = sizeof(char) * TABLE_NAME_LENGTH,
        TABLETYPE_OFFSET = TABLE_NAME_OFFSET + TABLE_NAME_SIZE,
        TABLETYPE_SIZE = sizeof(byte),
        RECORDS_COUNT_OFFSET = TABLETYPE_OFFSET + TABLETYPE_SIZE,
        RECORDS_COUNT_SIZE = sizeof(ushort),
        RECORD_SIZE_OFFSET = RECORDS_COUNT_OFFSET + RECORDS_COUNT_SIZE,
        RECORD_SIZE_SIZE = sizeof(ushort),
        RECORDS_START_OFFSET = RECORD_SIZE_OFFSET + RECORD_SIZE_SIZE,
        RECORDS_START_SIZE = sizeof(ushort),
        FREE_SPACE_OFFSET = RECORDS_START_OFFSET + RECORDS_START_SIZE,
        FREE_SPACE_SIZE = sizeof(ushort),
        FIRST_FREE_OFFSET = FREE_SPACE_OFFSET + FREE_SPACE_SIZE,
        FIRST_FREE_SIZE = sizeof(ushort),
        CREATION_DATE_OFFSET = FIRST_FREE_OFFSET + FIRST_FREE_SIZE,
        CREATION_DATE_SIZE = sizeof(long),
        LAST_MODIFIED_OFFSET = CREATION_DATE_OFFSET + CREATION_DATE_SIZE,
        LAST_MODIFIED_SIZE = sizeof(long),
        FIELD_DESCRIPTION_OFFSET = LAST_MODIFIED_OFFSET + LAST_MODIFIED_SIZE;
}

public static class FieldDescription
{
    public const int
        FIELD_NAME_OFFSET = 0,
        FIELD_NAME_SIZE = sizeof(char) * FIELD_NAME_LENGTH,
        FIELD_TYPE_OFFSET = FIELD_NAME_OFFSET + FIELD_NAME_SIZE,
        FIELD_TYPE_SIZE = sizeof(byte),
        TYPE_ARGUMENTS_OFFSET = FIELD_TYPE_OFFSET + FIELD_TYPE_SIZE,
        TYPE_ARGUMENTS_SIZE = sizeof(byte) * TYPE_ARGUMENTS_COUNT,
        FIELD_LENGTH_OFFSET = TYPE_ARGUMENTS_OFFSET + TYPE_ARGUMENTS_SIZE,
        FIELD_LENGTH_SIZE = sizeof(byte),
        FIELD_OFFSET_OFFSET = FIELD_LENGTH_OFFSET + FIELD_LENGTH_SIZE,
        FIELD_OFFSET_SIZE = sizeof(byte),
        FIELD_CONSTRAINT_OFFSET = FIELD_OFFSET_OFFSET + FIELD_OFFSET_SIZE,
        FIELD_CONSTRAINT_SIZE = sizeof(byte),
        AUTOINCREMENT_VALUE_OFFSET = FIELD_CONSTRAINT_OFFSET + FIELD_CONSTRAINT_SIZE,
        AUTOINCREMENT_VALUE_SIZE = sizeof(int),
        NEXT_AUTOINCREMENT_OFFSET = AUTOINCREMENT_VALUE_OFFSET + AUTOINCREMENT_VALUE_SIZE,
        NEXT_AUTOINCREMENT_SIZE = sizeof(int),
        FIELD_DESCRIPTION_SIZE = NEXT_AUTOINCREMENT_OFFSET + NEXT_AUTOINCREMENT_SIZE,
        FIELD_DESCRIPTION_TERMINATOR_SIZE = sizeof(byte),
        NO_AUTOINCREMENT = -1;

    public const byte
        FIELD_NAME_LENGTH = 32,
        TYPE_ARGUMENTS_COUNT = 5,
        FIELD_DESCRIPTION_TERMINATOR = 0x0D;




}
public static class RecordDescription
{
    public const int
        RECORD_FREE_FLAG_OFFSET = 0,
        RECORD_FREE_FLAG_SIZE = sizeof(bool),
        RECORD_NEXT_FREE_OFFSET = RECORD_FREE_FLAG_OFFSET + RECORD_FREE_FLAG_SIZE,
        RECORD_NEXT_FREE_SIZE = sizeof(ushort),
        RECORD_VALUES_OFFSET = RECORD_NEXT_FREE_OFFSET + RECORD_NEXT_FREE_SIZE;
    public const byte
        NO_NEXT_FREE = 0x00;
}
